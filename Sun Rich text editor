import React from 'react';
import SunEditor,{buttonList} from 'suneditor-react';
import 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File
 
const MyStatefulEditor = (props) => {

    const options=[
        'undo',
        'redo',
        'removeFormat',
        'align',
        'font',
        'fontSize',
        'bold', 
        'underline',
        'italic',
        'fontColor',
        'formatBlock',
        'hiliteColor',
        'horizontalRule',
        'lineHeight',
        'list',
        'paragraphStyle',
        'table',
        'template',
        'textStyle',
        'image',
        'link',
        'video',
        'fullScreen',
        'preview',
        'print',
        'save'
    ];

    const abc='<p>Sonata&nbsp;<strong><span style="font-size: 48px; color: rgb(255, 0, 0);">so</span></strong><span style="font-size: 8px;"><strong><span style="color: rgb(102, 0, 255); font-size: 72px;">ftw</span></strong></span><strong><span style="font-size: 48px; color: rgb(255, 0, 0);">are&nbsp;</span></strong><em><strong><span style="font-size: 12px; color: rgb(0, 85, 255);">Bangalore</span></strong></em></p>'
    const [textFormat,setTextFormat]=React.useState()
    const handleChange=(value)=>{
       setTextFormat(value)
       console.log(value)
    }
    const handleScroll=(event)=>{
        console.log(event); 
    }
   const handleClick=(event)=>{
        console.log(event); //Get the click event
    }
    const handleKeyUp=(event)=>{
        console.log(event); //Get the keyup event
    }
    const handleKeyDown=(event)=>{
        console.log(event); //Get the keyup event
    }
    const handleDrop=(event)=>{
        console.log(event); //Get the drop event
    }
    const handleImageUpload=()=>{
        console.log()
    }

    return (
        <div style={{width:"60%", margin:"0 auto"}}>
            <p><b>Sonata software</b></p>
            <SunEditor
                placeholder="sonata software"
                width="100%"
                autoFocus={true}
                showToolbar={true}
                enableToolbar={true}
                hide={false}
                appendContents=""
                enable={true}
                setContents={abc}
                disable={false}

                //Toolbar options
                setOptions={{
                    height: 200,
                    buttonList: [options                     
                    ],
                }}
                //Events
                onChange={handleChange}
                onScroll={handleScroll}
                onClick={handleClick} 
                onKeyUp={handleKeyUp}
                onKeyDown={handleKeyDown}
                onDrop={handleDrop}
                onImageUpload={handleImageUpload}
            />
        </div>
    );
};
export default MyStatefulEditor;


// import React, {Component, PropTypes} from 'react';
// import RichTextEditor from 'react-rte';
 
// class MyStatefulEditor extends Component {

// //   static propTypes = {
// //     onChange: PropTypes.func
// //   };                             
 
//   state = {
//     value: RichTextEditor.createEmptyValue()
//   }

//   onChange = (value) => {
//     this.setState({value});
//     if (this.props.onChange) {
//       // Send the changes up to the parent component as an HTML string.
//       // This is here to demonstrate using `.toString()` but in a real app it
//       // would be better to avoid generating a string on each change.
//       this.props.onChange(value.toString('html')
//       );
//     }
//   };
 
//   render () {

    
//     return (
//       <RichTextEditor
//       label="Type something here..."
//       value={this.state.value} onChange={this.onChange}    />
//     );
//   }
// }

// export default MyStatefulEditor;


// // const toolbarConfig = {
// //     // Optionally specify the groups to display (displayed in the order listed).
// //     display: ['INLINE_STYLE_BUTTONS', 'BLOCK_TYPE_BUTTONS', 'LINK_BUTTONS', 'BLOCK_TYPE_DROPDOWN', 'HISTORY_BUTTONS'],
// //     INLINE_STYLE_BUTTONS: [
// //       {label: 'Bold', style: 'BOLD', className: 'custom-css-class'},
// //       {label: 'Italic', style: 'ITALIC'},
// //       {label: 'Underline', style: 'UNDERLINE'}
// //     ],
// //     BLOCK_TYPE_DROPDOWN: [
// //       {label: 'Normal', style: 'unstyled'},
// //       {label: 'Heading Large', style: 'header-one'},
// //       {label: 'Heading Medium', style: 'header-two'},
// //       {label: 'Heading Small', style: 'header-three'}
// //     ],
// //     BLOCK_TYPE_BUTTONS: [
// //       {label: 'UL', style: 'unordered-list-item'},
// //       {label: 'OL', style: 'ordered-list-item'}
// //     ]
// //   };
